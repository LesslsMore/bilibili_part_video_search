{"code":0,"message":"0","ttl":1,"data":{"bvid":"BV1Np4y1z7BU","aid":970482222,"videos":154,"tid":231,"tname":"计算机技术","copyright":1,"pic":"http://i1.hdslb.com/bfs/archive/6f5383250065bd537ec8cdaad64c43557a7f5a6f.png","title":"黑马程序员Java设计模式详解， 23种Java设计模式（图解+框架源码分析+实战）","pubdate":1606987655,"ctime":1606987655,"desc":"本课程从设计模式的一些相关的概念开始，再到软件设计原则，重点讲解23种设计模式，针对每一种模式都配备了相关的代码。最后通过一个综合案例将常用的设计模式使用起来。\r\n\r\n市面上已经有很多的设计模式的教程，而我们这套课程有哪儿些特色呢？\r\n从基础开始。只要你有JavaSE的基础都可以学习\r\n全面。针对设计模式及其模式的变形及开发中是如何使用的\r\n案例经典。学习spring框架是最好的提升的途径，spring框架将面向对象体现的淋漓尽致","desc_v2":[{"raw_text":"本课程从设计模式的一些相关的概念开始，再到软件设计原则，重点讲解23种设计模式，针对每一种模式都配备了相关的代码。最后通过一个综合案例将常用的设计模式使用起来。\r\n\r\n市面上已经有很多的设计模式的教程，而我们这套课程有哪儿些特色呢？\r\n从基础开始。只要你有JavaSE的基础都可以学习\r\n全面。针对设计模式及其模式的变形及开发中是如何使用的\r\n案例经典。学习spring框架是最好的提升的途径，spring框架将面向对象体现的淋漓尽致","type":1,"biz_id":0}],"state":0,"duration":74212,"rights":{"bp":0,"elec":0,"download":1,"movie":0,"pay":0,"hd5":0,"no_reprint":1,"autoplay":1,"ugc_pay":0,"is_cooperation":0,"ugc_pay_preview":0,"no_background":0,"clean_mode":0,"is_stein_gate":0,"is_360":0,"no_share":0,"arc_pay":0,"free_watch":0},"owner":{"mid":37974444,"name":"黑马程序员","face":"https://i0.hdslb.com/bfs/face/a71b4dd6647ddf0c813bcf74e062edab9224cb0e.jpg"},"stat":{"aid":970482222,"view":757198,"danmaku":17070,"reply":658,"favorite":31139,"coin":7643,"share":2123,"now_rank":0,"his_rank":0,"like":8122,"dislike":0,"evaluation":"","argue_msg":"","vt":0},"dynamic":"","cid":1111526967,"dimension":{"width":1920,"height":1080,"rotate":0},"premiere":null,"teenage_mode":0,"is_chargeable_season":false,"is_story":false,"is_upower_exclusive":false,"is_upower_play":false,"enable_vt":0,"vt_display":"","no_cache":false,"pages":[{"cid":1111526967,"page":1,"from":"vupload","part":"1.设计模式-课程介绍","duration":277,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0},"first_frame":"http://i2.hdslb.com/bfs/storyff/n230428021uu9t4l2n0ys13spiuw395a_firsti.jpg"},{"cid":1111527359,"page":2,"from":"vupload","part":"2.设计模式-产生背景","duration":180,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0},"first_frame":"http://i2.hdslb.com/bfs/storyff/n2304280264xcj73q73gz1dtdoqd503e_firsti.jpg"},{"cid":262371718,"page":3,"from":"vupload","part":"3.设计模式-概念\u0026学习的必须性","duration":239,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262371865,"page":4,"from":"vupload","part":"4.设计模式-分类","duration":186,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262371928,"page":5,"from":"vupload","part":"5.设计模式-类图","duration":187,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262372028,"page":6,"from":"vupload","part":"6.设计模式-类图-类和接口的表示方式","duration":345,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262372182,"page":7,"from":"vupload","part":"7.设计模式-类图-关联关系表示方式","duration":294,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262372327,"page":8,"from":"vupload","part":"8.设计模式-类图-聚合关系和组合关系的表示方式","duration":285,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262372493,"page":9,"from":"vupload","part":"9.设计模式-类图-依赖、继承、实现关系表示方式","duration":458,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262372709,"page":10,"from":"vupload","part":"10.设计模式-设计原则(开闭原则概述)","duration":417,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262372982,"page":11,"from":"vupload","part":"11.设计模式-设计原则(开闭原则案例实现)","duration":488,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262373455,"page":12,"from":"vupload","part":"12.设计模式-设计原则(里氏代换原则概述和案例)","duration":959,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262374149,"page":13,"from":"vupload","part":"13.设计模式-设计原则(里氏代换原则案例改进)","duration":546,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262374547,"page":14,"from":"vupload","part":"14.设计模式-设计原则(依赖倒转原则概述和案例)","duration":962,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262375267,"page":15,"from":"vupload","part":"15.设计模式-设计原则(依赖倒转原则案例改进)","duration":637,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262375660,"page":16,"from":"vupload","part":"16.设计模式-设计原则(接口隔离原则概述和案例)","duration":619,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262375981,"page":17,"from":"vupload","part":"17.设计模式-设计原则(接口隔离原则案例改进)","duration":439,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262376285,"page":18,"from":"vupload","part":"18.设计模式-设计原则(迪米特法则概述)","duration":308,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262376458,"page":19,"from":"vupload","part":"19.设计模式-设计原则(迪米特法则案例)","duration":742,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262376925,"page":20,"from":"vupload","part":"20.设计模式-设计原则(合成复用原则概述)","duration":326,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262377165,"page":21,"from":"vupload","part":"21.设计模式-设计原则(合成复用原则案例)","duration":316,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262377302,"page":22,"from":"vupload","part":"22.设计模式-创建型模式-单例设计模式概述","duration":169,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262377375,"page":23,"from":"vupload","part":"23.设计模式-创建型模式-单例设计模式-饿汉式-方式1","duration":446,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262377642,"page":24,"from":"vupload","part":"24.设计模式-创建型模式-单例设计模式-饿汉式-方式2","duration":381,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262377848,"page":25,"from":"vupload","part":"25.设计模式-创建型模式-单例设计模式-懒汉式","duration":622,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262378264,"page":26,"from":"vupload","part":"26.设计模式-创建型模式-单例设计模式-双重检查方式","duration":532,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262378583,"page":27,"from":"vupload","part":"27.设计模式-创建型模式-单例设计模式-静态内部类方式","duration":414,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262378827,"page":28,"from":"vupload","part":"28.设计模式-创建者模式-单例设计模式-枚举方式","duration":178,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262371226,"page":29,"from":"vupload","part":"29.设计模式-创建者模式-单例设计模式-序列化破坏单例模式","duration":535,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262378941,"page":30,"from":"vupload","part":"30.设计模式-创建者模式-单例设计模式-反射破坏单例模式","duration":292,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262379150,"page":31,"from":"vupload","part":"31.设计模式-创建者模式-单例设计模式-序列化破坏单例模式的解决方案","duration":363,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262379384,"page":32,"from":"vupload","part":"32.设计模式-创建者模式-单例设计模式-反射破坏单例模式的解决方案","duration":340,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262379582,"page":33,"from":"vupload","part":"33.设计模式-创建者模式-单例设计模式-源码解析","duration":469,"vid":"","weblink":"","dimension":{"width":1280,"height":720,"rotate":0}},{"cid":262380851,"page":34,"from":"vupload","part":"1.设计模式-创建者模式-点咖啡案例","duration":778,"vid":"","weblink":"","dimension":{"width":1280,"height":720,"rotate":0}},{"cid":262390469,"page":35,"from":"vupload","part":"2.设计模式-创建者模式-简单工厂模式","duration":811,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262390996,"page":36,"from":"vupload","part":"3.设计模式-创建者模式-简单工厂模式的优缺点","duration":317,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262391262,"page":37,"from":"vupload","part":"4.设计模式-创建者模式-扩展（静态工厂模式）","duration":162,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262391364,"page":38,"from":"vupload","part":"5.设计模式-创建者模式-工厂方法模式概述","duration":188,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262391439,"page":39,"from":"vupload","part":"6.设计模式-创建者模式-使用工厂方法模式改进点咖啡案例","duration":753,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262392013,"page":40,"from":"vupload","part":"7.设计模式-创建者模式-工厂方法模式优缺点","duration":172,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262392151,"page":41,"from":"vupload","part":"8.设计模式-创建者模式-抽象工厂模式概述","duration":509,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262392483,"page":42,"from":"vupload","part":"9.设计模式-创建者模式-抽象工厂模式案例","duration":847,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262393115,"page":43,"from":"vupload","part":"10.设计模式-创建者模式-抽象工厂模式的优缺点及使用场景","duration":319,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262393350,"page":44,"from":"vupload","part":"11.设计模式-创建者模式-模式扩展（简单工厂模式+配置文件）","duration":1059,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262394111,"page":45,"from":"vupload","part":"12.设计模式-创建者模式-jdk源码解析（单列集合获取迭代器方法）","duration":456,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262394428,"page":46,"from":"vupload","part":"13.设计模式-创建者模式-原型模式概述","duration":212,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262394534,"page":47,"from":"vupload","part":"14.设计模式-创建者模式-原型模式实现","duration":505,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262394832,"page":48,"from":"vupload","part":"15.设计模式-创建者模式-原型模式案例","duration":464,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262395113,"page":49,"from":"vupload","part":"16.设计模式-创建者模式-原型模式-深克隆","duration":831,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262395844,"page":50,"from":"vupload","part":"17.设计模式-创建者模式-建造者模式概述","duration":584,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262396378,"page":51,"from":"vupload","part":"18.设计模式-创建者模式-建造者模式案例（生产自行车）","duration":1060,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262397642,"page":52,"from":"vupload","part":"19.设计模式-创建者模式-建造者模式优缺点及使用场景","duration":383,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262397979,"page":53,"from":"vupload","part":"20.设计模式-创建者模式-建造者模式扩展","duration":813,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262398573,"page":54,"from":"vupload","part":"21.设计模式-创建者模式各个模式的对比","duration":322,"vid":"","weblink":"","dimension":{"width":1280,"height":720,"rotate":0}},{"cid":262398720,"page":55,"from":"vupload","part":"1.设计模式-结构型模式概述","duration":104,"vid":"","weblink":"","dimension":{"width":1280,"height":720,"rotate":0}},{"cid":262398760,"page":56,"from":"vupload","part":"2.设计模式-结构型模式-代理对象概述","duration":423,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262399059,"page":57,"from":"vupload","part":"3.设计模式-结构型模式-静态代理案例（火车站卖票）","duration":560,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262399467,"page":58,"from":"vupload","part":"4.设计模式-结构型模式-JDK代理案例（火车站卖票）","duration":1114,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262400228,"page":59,"from":"vupload","part":"5.设计模式-结构型模式-JDK代理原理及代码执行流程","duration":816,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262400888,"page":60,"from":"vupload","part":"6.设计模式-结构型模式-CGLIB代理实现案例（火车站卖票）","duration":868,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262401520,"page":61,"from":"vupload","part":"7.设计模式-结构型模式-三种代理的对比","duration":410,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262401853,"page":62,"from":"vupload","part":"8.设计模式-结构型模式-优缺点及使用场景","duration":257,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262402021,"page":63,"from":"vupload","part":"9.设计模式-结构型模式-适配器模式概述","duration":239,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262402210,"page":64,"from":"vupload","part":"10.设计模式-结构型模式-适配器模式结构","duration":133,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262402324,"page":65,"from":"vupload","part":"11.设计模式-结构型模式-类适配器模式案例分析","duration":310,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262402423,"page":66,"from":"vupload","part":"12.设计模式-结构型模式-类适配器模式案例实现","duration":1004,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262403118,"page":67,"from":"vupload","part":"13.设计模式-结构型模式-对象适配器模式案例实现","duration":521,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262403451,"page":68,"from":"vupload","part":"14.设计模式-结构型模式-适配器模式的应用场景","duration":77,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262403479,"page":69,"from":"vupload","part":"15.设计模式-结构型模式-适配器模式在JDK源码中的应用","duration":329,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262403622,"page":70,"from":"vupload","part":"16.设计模式-结构型模式-装饰者模式概述","duration":345,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262403815,"page":71,"from":"vupload","part":"17.设计模式-结构型模式-装饰者模式案例实现","duration":1200,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262404562,"page":72,"from":"vupload","part":"18.设计模式-结构型模式-装饰者模式的好处及使用场景","duration":223,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262404762,"page":73,"from":"vupload","part":"19.设计模式-结构型模式-装饰者模式在JDK源码中的应用","duration":165,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262404838,"page":74,"from":"vupload","part":"20.设计模式-结构型模式-装饰者模式和静态代理的区别","duration":171,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262404964,"page":75,"from":"vupload","part":"21.设计模式-结构型模式-桥接模式概述","duration":263,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262405123,"page":76,"from":"vupload","part":"22.设计模式-结构型模式-桥接模式案例实现","duration":778,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262405651,"page":77,"from":"vupload","part":"23.设计模式-结构型模式-桥接模式好处及使用场景","duration":150,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262405719,"page":78,"from":"vupload","part":"24.设计模式-结构型模式-外观模式概述","duration":282,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262405895,"page":79,"from":"vupload","part":"25.设计模式-结构型模式-外观模式案例实现","duration":719,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262406366,"page":80,"from":"vupload","part":"26.设计模式-结构型模式-外观模式优缺点及使用场景","duration":223,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262406509,"page":81,"from":"vupload","part":"27.设计模式-结构型模式-外观模式在源码中的使用","duration":338,"vid":"","weblink":"","dimension":{"width":1280,"height":720,"rotate":0}},{"cid":262610236,"page":82,"from":"vupload","part":"1.设计模式-结构型模式-组合模式概述","duration":505,"vid":"","weblink":"","dimension":{"width":1280,"height":720,"rotate":0}},{"cid":262610371,"page":83,"from":"vupload","part":"2.设计模式-结构型模式-组合模式案例需求和类图说明","duration":323,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262610477,"page":84,"from":"vupload","part":"3.设计模式-结构型模式-组合模式案例实现","duration":1282,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262611774,"page":85,"from":"vupload","part":"4.设计模式-结构型模式-组合模式分类","duration":269,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262611936,"page":86,"from":"vupload","part":"5.设计模式-结构型模式-组合模式优点及使用场景","duration":196,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262612032,"page":87,"from":"vupload","part":"6.设计模式-结构型模式-享元模式概述","duration":334,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262612198,"page":88,"from":"vupload","part":"7.设计模式-结构型模式-享元模式案例实现","duration":1017,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262612587,"page":89,"from":"vupload","part":"8.设计模式-结构型模式-享元模式优缺点及使用场景","duration":209,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262612688,"page":90,"from":"vupload","part":"9.设计模式-结构型模式-享元模式在JDK源码中的应用","duration":454,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262612890,"page":91,"from":"vupload","part":"10.设计模式-行为型模式概述","duration":168,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262612941,"page":92,"from":"vupload","part":"11.设计模式-行为型模式-模板方法模式概述","duration":504,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262613288,"page":93,"from":"vupload","part":"12.设计模式-行为型模式-模板方法模式案例实现","duration":597,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262613572,"page":94,"from":"vupload","part":"13.设计模式-行为型模式-模板方法模式优缺点及使用场景","duration":242,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262613686,"page":95,"from":"vupload","part":"14.设计模式-行为型模式-模板方法模式在JDK源码中的应用","duration":281,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262613831,"page":96,"from":"vupload","part":"15.设计模式-行为型模式-策略模式概述","duration":302,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262613953,"page":97,"from":"vupload","part":"16.设计模式-行为型模式-策略模式案例实现","duration":710,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262614298,"page":98,"from":"vupload","part":"17.设计模式-行为型模式-策略模式的优缺点及使用场景","duration":311,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262614453,"page":99,"from":"vupload","part":"18.设计模式-行为型模式-策略模式在JDK源码中的应用","duration":334,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262614611,"page":100,"from":"vupload","part":"19.设计模式-行为型模式-命令模式概述","duration":392,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262614771,"page":101,"from":"vupload","part":"20.设计模式-行为型模式-命令模式案例分析","duration":246,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262614853,"page":102,"from":"vupload","part":"21.设计模式-行为型模式-命令模式案例实现","duration":1148,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262615470,"page":103,"from":"vupload","part":"22.设计模式-行为型模式-命令模式优缺点及使用场景","duration":266,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262615572,"page":104,"from":"vupload","part":"23.设计模式-行为型模式-命令模式在JDK源码中的应用","duration":284,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262615700,"page":105,"from":"vupload","part":"24.设计模式-行为型模式-职责链模式概述","duration":461,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262615937,"page":106,"from":"vupload","part":"25.设计模式-行为型模式-职责链模式案例分析","duration":260,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262616008,"page":107,"from":"vupload","part":"26.设计模式-行为型模式-职责链模式案例实现","duration":1108,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262616589,"page":108,"from":"vupload","part":"27.设计模式-行为型模式-职责链模式优缺点","duration":222,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262616712,"page":109,"from":"vupload","part":"28.设计模式-行为型模式-职责链模式在JavaWeb源码中的应用","duration":449,"vid":"","weblink":"","dimension":{"width":1280,"height":720,"rotate":0}},{"cid":262616828,"page":110,"from":"vupload","part":"1.设计模式-行为型模式-状态模式引入案例实现","duration":916,"vid":"","weblink":"","dimension":{"width":1280,"height":720,"rotate":0}},{"cid":262617071,"page":111,"from":"vupload","part":"2.设计模式-行为型模式-状态模式概述","duration":192,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262617166,"page":112,"from":"vupload","part":"3.设计模式-行为型模式-状态模式案例实现","duration":1191,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262617876,"page":113,"from":"vupload","part":"4.设计模式-行为型模式-状态模式的优缺点及使用场景","duration":208,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262617963,"page":114,"from":"vupload","part":"5.设计模式-行为型模式-观察者模式的概述","duration":229,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262618063,"page":115,"from":"vupload","part":"6.设计模式-行为型模式-观察者模式的案例实现","duration":874,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262618437,"page":116,"from":"vupload","part":"7.设计模式-行为型模式-观察者模式的优缺点及使用场景","duration":145,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262618495,"page":117,"from":"vupload","part":"8.设计模式-行为型模式-JDK中提供的观察者模式的实现","duration":547,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262618879,"page":118,"from":"vupload","part":"9.设计模式-行为型模式-中介者模式的概述","duration":517,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262619113,"page":119,"from":"vupload","part":"10.设计模式-行为型模式-中介者模式案例实现","duration":992,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262619664,"page":120,"from":"vupload","part":"11.设计模式-行为型模式-中介者模式优缺点及使用场景","duration":258,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262619817,"page":121,"from":"vupload","part":"12.设计模式-行为型模式-迭代器模式概述","duration":188,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262619893,"page":122,"from":"vupload","part":"13.设计模式-行为型模式-迭代器模式案例实现","duration":1059,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262620492,"page":123,"from":"vupload","part":"14.设计模式-行为型模式-迭代器模式优缺点及使用场景","duration":200,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262620600,"page":124,"from":"vupload","part":"15.设计模式-行为型模式-迭代器模式在JDK源码中的使用分析","duration":311,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262620739,"page":125,"from":"vupload","part":"16.设计模式-行为型模式-访问者模式概述","duration":273,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262620920,"page":126,"from":"vupload","part":"17.设计模式-行为型模式-访问者模式案例实现","duration":1048,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262621396,"page":127,"from":"vupload","part":"18.设计模式-行为型模式-访问者模式优缺点及使用场景","duration":280,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262621540,"page":128,"from":"vupload","part":"19.设计模式-行为型模式-访问者模式扩展【分派（静态分派、动态分派及双分派）】","duration":798,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262621922,"page":129,"from":"vupload","part":"20.设计模式-行为型模式-备忘录模式概述","duration":305,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262622119,"page":130,"from":"vupload","part":"21.设计模式-行为型模式-白箱备忘录模式实现","duration":1213,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262622795,"page":131,"from":"vupload","part":"22.设计模式-行为型模式-黑箱备忘录模式实现","duration":628,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262623174,"page":132,"from":"vupload","part":"23.设计模式-行为型模式-备忘录模式优缺点及使用场景","duration":206,"vid":"","weblink":"","dimension":{"width":1280,"height":720,"rotate":0}},{"cid":262624162,"page":133,"from":"vupload","part":"1.设计模式-行为型模式-解释器模式概述","duration":505,"vid":"","weblink":"","dimension":{"width":1280,"height":720,"rotate":0}},{"cid":262624299,"page":134,"from":"vupload","part":"2.设计模式-行为型模式-解释器模式结构","duration":190,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262624437,"page":135,"from":"vupload","part":"3.设计模式-行为型模式-解释器模式案例实现","duration":1219,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262625064,"page":136,"from":"vupload","part":"4.设计模式-行为型模式-解释器模式优缺点及使用场景","duration":337,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262625269,"page":137,"from":"vupload","part":"5.设计模式-回顾spring框架的基本使用","duration":647,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262625680,"page":138,"from":"vupload","part":"6.设计模式-自定义SpringIOC-spring核心功能架构","duration":674,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262626129,"page":139,"from":"vupload","part":"7.设计模式-自定义SpringIOC-bean概述","duration":222,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262626238,"page":140,"from":"vupload","part":"8.设计模式-自定义SpringIOC-BeanFactory接口分析","duration":496,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262626601,"page":141,"from":"vupload","part":"9.设计模式-自定义SpringIOC-BeanDefinition接口分析","duration":113,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262626667,"page":142,"from":"vupload","part":"10.设计模式-自定义SpringIOC-BeanDefinitionReader接口分析","duration":253,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262626828,"page":143,"from":"vupload","part":"11.设计模式-自定义SpringIOC-BeanDefinitionRegistry接口分析","duration":431,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262627139,"page":144,"from":"vupload","part":"12.设计模式-自定义SpringIOC-ClassPathXmlApplicationContext类构造方法说明","duration":225,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262627264,"page":145,"from":"vupload","part":"13.设计模式-自定义SpringIOC-PropertyValue类定义","duration":257,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262627450,"page":146,"from":"vupload","part":"14.设计模式-自定义SpringIOC-MutablePropertyValues类定义","duration":950,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262628245,"page":147,"from":"vupload","part":"15.设计模式-自定义SpringIOC-BeanDefinition类定义","duration":179,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262628361,"page":148,"from":"vupload","part":"16.设计模式-自定义SpringIOC-注册表相关类定义","duration":404,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262628701,"page":149,"from":"vupload","part":"17.设计模式-自定义SpringIOC-解析器相关类定义","duration":1164,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262629555,"page":150,"from":"vupload","part":"18.设计模式-自定义SpringIOC-BeanFactory和ApplicationContext接口的定义","duration":271,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262629710,"page":151,"from":"vupload","part":"19.设计模式-自定义SpringIOC-AbstractApplicationContext类定义","duration":558,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262630055,"page":152,"from":"vupload","part":"20.设计模式-自定义SpringIOC-ClassPathXmlApplicationContext类定义","duration":1413,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":262631070,"page":153,"from":"vupload","part":"21.设计模式-自定义SpringIOC-测试","duration":367,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0}},{"cid":1111527616,"page":154,"from":"vupload","part":"22.设计模式-自定义SpringIOC总结","duration":367,"vid":"","weblink":"","dimension":{"width":1920,"height":1080,"rotate":0},"first_frame":"http://i0.hdslb.com/bfs/storyff/n230428062raka85b5rp6zivz4ybtemf_firsti.jpg"}],"subtitle":{"allow_submit":false,"list":[]},"is_season_display":false,"user_garb":{"url_image_ani_cut":""},"honor_reply":{},"like_icon":"","need_jump_bv":false,"disable_show_up_info":false}}